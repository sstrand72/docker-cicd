pipeline {
   agent any
   environment {
     def commit_id = ''
   }
   stages {
   stage('Preparation') {
      steps {
         script {
          checkout scm
          sh "git rev-parse --short HEAD > .git/commit-id"
          commit_id = readFile('.git/commit-id').trim()
        }
      }
   }
   stage('Build And Test') {
     parallel {
       stage('dockerbuild') {
          steps {
             script {
               dir('basics') {
                def app = docker.build("stephensflynn/basics:${commit_id}", '.')
              }  
            }
          }
       }
       stage('sonarqube tests') {
           steps {
               dir('basics') {
           
               // def app = docker.build("stephensflynn/sonar:${commit_id}", 'echo Test' , '.')                             
                println "Run Sonar tests."
              }
           }
       }
     }
   }
   stage('docker build/push') {     
      steps {
        dir('basics') {
          //docker.withRegistry('https://index.docker.io/v1/', 'dockerhub') {
          //def app = docker.build("stephensflynn/basics:${commit_id}", '.').push()
          //}
          println "Push image."
        }
      }
    }
  }
}
